<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!-- Estilo para botones panel derecho con efecto hover -->
    <Style x:Key="StyledUserButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" StrokeThickness="0"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4B4D67"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10"
                                                   ShadowDepth="0"
                                                   Color="Black"
                                                   Opacity="0.4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#5A5C7A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!---Estilos de los botones del panel derecho-->
    <Style x:Key="PanelDerechoButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ColorBotonesPanelDerecho}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Fondo base -->
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"/>

                        <!-- Borde discontinuo negro para hover -->
                        <Rectangle x:Name="hoverRectangle"
                               Stroke="Black"
                               StrokeThickness="1"
                               RadiusX="5" RadiusY="5"
                               StrokeDashArray="4 2"
                               Visibility="Collapsed"
                               IsHitTestVisible="False"/>

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorPanelDerecho}"/>
                            <Setter TargetName="hoverRectangle" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#264135"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ColorBotonesPanelDerecho}"/>
                            <Setter Property="Foreground" Value="#CCCCCC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Estilo para el TextBox del ComboBox del panel derecho-->
    <ControlTemplate x:Key="ComboBoxTextBoxTemplate" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style x:Key="IntermedioPanelStyle" TargetType="ContentControl">
        <Setter Property="Background" Value="#1AFFFFFF"/>
        <!-- blanco con baja opacidad -->
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="1" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="10"
                        BorderBrush="#5A668A"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilo para los items del ComboBox -->
    <Style x:Key="CustomComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                        Padding="5,2"
                        Background="Transparent"
                        BorderThickness="0">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverGrayColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Estilos boton menus desplegables-->
    <Style x:Key="VerticalMenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource PrimaryGrayColor}">
                        <Grid>
                            <!-- Efecto de brillo superior -->
                            <Border Height="5" VerticalAlignment="Top" CornerRadius="4,4,0,0"
                                Background="#20FFFFFF" Opacity="0.5"/>

                            <!-- Contenido rotado verticalmente -->
                            <Viewbox Stretch="Uniform" Width="30" Height="24" Margin="0,10,0,10">
                                <TextBlock Text="{TemplateBinding Content}" 
                                       RenderTransformOrigin="0.5,0.5"
                                       Foreground="{TemplateBinding Foreground}">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform Angle="-90"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Viewbox>

                            <!-- Indicador de selección (gris por defecto) -->
                            <Border x:Name="selectionIndicator" 
                                Width="5" 
                                HorizontalAlignment="Right" 
                                Background="{DynamicResource PrimaryGrayColor}"
                                CornerRadius="2,0,0,2"
                                Opacity="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverGrayColor}"/>
                            <Setter TargetName="selectionIndicator" Property="Background" Value="{DynamicResource AccentColor}"/>
                            <Setter TargetName="selectionIndicator" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColorDark_Light}"/>
                            <Setter TargetName="selectionIndicator" Property="Background" Value="{DynamicResource AccentColor}"/>
                            <Setter TargetName="selectionIndicator" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--estilos para el panel derecho-->
    <Style x:Key="SidePanelButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryGrayColor}"/>
        <!-- HoverGrayColor similar -->
        <Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
        <Setter Property="BorderBrush" Value="#5A668A"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#6E7A9B" Offset="0"/>
                    <GradientStop Color="#3A3A4A" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    To="#C17E54" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                    To="#C17E54" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                    To="#3F4A72" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                    To="#5A668A" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilo para el Menu -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <!-- Estilo para los MenuItem -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,2"/>
        <Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border" 
                        Background="{TemplateBinding Background}" 
                        CornerRadius="2"
>
                        <Grid>
                            <ContentPresenter ContentSource="Header" 
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"/>
                            <Popup x:Name="Popup"
                               Placement="Right"
                                 HorizontalOffset="2"  
                                 VerticalOffset="25"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder"
                                    Background="{DynamicResource PrimaryDarkColor}"
                                    BorderBrush="{DynamicResource PrimaryGrayColor}"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                                MinWidth="200"
                                            >
                                    <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverGrayColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverGrayColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Estilo para botones de ventana -->
    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="1" Opacity="0.2"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HoverGrayColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E81123"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Estilo para las pestañas -->
    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColorDark_Light}"/>
        <!-- Usará el color que cambias en el código -->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 5 0"/>
        <Setter Property="Padding" Value="18 2"/>
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                        CornerRadius="5" Margin="{TemplateBinding Margin}">
                        <TextBlock x:Name="contentText" 
                               Text="{TemplateBinding Header}"
                               Foreground="{DynamicResource PrimaryTextColor}" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryTextColorDark_Light}"/>
                            <!-- No cambia el color del texto en hover -->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryTextColorDark_Light}"/>
                            <!-- No cambia el color del texto en selección -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Estilo del TabControl -->
    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource HoverGrayColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0"
                                      IsItemsHost="True"
                                      Background="Transparent"
                                      Margin="0 0 0 10"/>
                        <ContentPresenter Grid.Row="1"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>